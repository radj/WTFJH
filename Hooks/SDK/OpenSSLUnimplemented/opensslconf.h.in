{- join("\n",map { "/* $_ */" } @autowarntext) -}

#ifdef  __cplusplus
extern "C" {
#endif
/* OpenSSL was configured with the following options: */
{-
    if (@{$config{openssl_sys_defines}}) {
      foreach (@{$config{openssl_sys_defines}}) {
	$OUT .= "#ifndef $_\n";
	$OUT .= "# define $_ 1\n";
	$OUT .= "#endif\n";
      }
    }
    "";
-}
#ifndef OPENSSL_DOING_MAKEDEPEND

{-
    if (@{$config{openssl_experimental_defines}}) {
      foreach (@{$config{openssl_experimental_defines}}) {
	(my $ex = $_) =~ s/_NO_/_EXPERIMENTAL_/;
	$OUT .= "#ifndef $ex\n";
	$OUT .= "# ifndef $_\n";
	$OUT .= "#  define $_\n";
	$OUT .= "# endif\n";
	$OUT .= "#endif\n";
      }
    }
    "";
-}
{-
    foreach (@{$config{openssl_api_defines}}) {
        (my $macro, my $value) = $_ =~ /^(.*?)=(.*?)$/;
        $OUT .= "#define OPENSSL_MIN_API $value\n";
    }
-}
{-
    if (@{$config{openssl_algorithm_defines}}) {
      foreach (@{$config{openssl_algorithm_defines}}) {
	$OUT .= "#ifndef $_\n";
	$OUT .= "# define $_\n";
	$OUT .= "#endif\n";
      }
    } else {
      "   /* no ciphers excluded */\n";
    }
-}

#endif /* OPENSSL_DOING_MAKEDEPEND */

{-
    if (@{$config{openssl_thread_defines}}) {
      foreach (@{$config{openssl_thread_defines}}) {
	$OUT .= "#ifndef $_\n";
	$OUT .= "# define $_\n";
	$OUT .= "#endif\n";
      }
    }
    "";
-}
{-
    if (@{$config{openssl_other_defines}}) {
      foreach (@{$config{openssl_other_defines}}) {
	$OUT .= "#ifndef $_\n";
	$OUT .= "# define $_\n";
	$OUT .= "#endif\n";
      }
    }
    "";
-}

/* The OPENSSL_NO_* macros are also defined as NO_* if the application
   asks for it.  This is a transient feature that is provided for those
   who haven't had the time to do the appropriate changes in their
   applications.  */
#ifdef OPENSSL_ALGORITHM_DEFINES
{-
    if (@{$config{openssl_algorithm_defines}}) {
      foreach (@{$config{openssl_algorithm_defines}}) {
	(my $ex = $_) =~ s/^OPENSSL_//;
	$OUT .= "# if defined($_) \&\& !defined($ex)\n";
	$OUT .= "#  define $ex\n";
	$OUT .= "# endif\n";
      }
    }
    "";
-}
#endif

{- $target{cpuid_obj} ne "mem_clr.o" ? "#define OPENSSL_CPUID_OBJ" : "" -}

/*
 * Applications should use -DOPENSSL_API_COMPAT=<version> to suppress the
 * declarations of functions deprecated in or before <version>. Otherwise, they
 * still won't see them if the library has been built to disable deprecated
 * functions.
 */
#if defined(OPENSSL_NO_DEPRECATED)
# define DECLARE_DEPRECATED(f)
#elif __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ > 0)
# define DECLARE_DEPRECATED(f)    f __attribute__ ((deprecated));
#else
# define DECLARE_DEPRECATED(f)   f;
#endif

#ifndef OPENSSL_MIN_API
#define OPENSSL_MIN_API 0
#endif

#if !defined(OPENSSL_API_COMPAT) || OPENSSL_API_COMPAT < OPENSSL_MIN_API
#undef OPENSSL_API_COMPAT
#define OPENSSL_API_COMPAT OPENSSL_MIN_API
#endif

#if OPENSSL_API_COMPAT < 0x10100000L
# define DEPRECATEDIN_1_1_0(f)   DECLARE_DEPRECATED(f)
#else
# define DEPRECATEDIN_1_1_0(f)
#endif

#if OPENSSL_API_COMPAT < 0x10000000L
# define DEPRECATEDIN_1_0_0(f)   DECLARE_DEPRECATED(f)
#else
# define DEPRECATEDIN_1_0_0(f)
#endif

#if OPENSSL_API_COMPAT < 0x00908000L
# define DEPRECATEDIN_0_9_8(f)   DECLARE_DEPRECATED(f)
#else
# define DEPRECATEDIN_0_9_8(f)
#endif

/* Generate 80386 code? */
{- $config{processor} eq "386" ? "#define" : "#undef" -} I386_ONLY

#if !(defined(VMS) || defined(__VMS)) /* VMS uses logical names instead */
#if defined(HEADER_CRYPTLIB_H) && !defined(OPENSSLDIR)
#define ENGINESDIR {- quotify1($config{enginesdir}) -}
#define OPENSSLDIR {- quotify1($config{openssldir}) -}
#endif
#endif

#undef OPENSSL_UNISTD
#define OPENSSL_UNISTD {- $target{unistd} -}

#undef OPENSSL_EXPORT_VAR_AS_FUNCTION
{- $config{export_var_as_fn} ? "#define OPENSSL_EXPORT_VAR_AS_FUNCTION" : "" -}

/*
 * The following are cipher-specific, but are part of the public API.
 */

#if !defined(OPENSSL_SYS_UEFI)
{- $config{bn_ll} ? "#define" : "#undef" -} BN_LLONG
    
/* Only one for the following should be defined */
{- $config{b64l} ? "#define" : "#undef" -} SIXTY_FOUR_BIT_LONG
{- $config{b64}  ? "#define" : "#undef" -} SIXTY_FOUR_BIT
{- $config{b32}  ? "#define" : "#undef" -} THIRTY_TWO_BIT
#endif

# define RC4_INT {- $config{rc4_int} -}

#ifdef  __cplusplus
}
#endif
